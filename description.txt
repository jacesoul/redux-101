### Vanilla Redux 
- createStore에서 store은 data(state)를 넣는곳이다. 
- state는 application에서 바뀌는 data를 말한다.
- 리덕스는 data를 관리하는데 도와주는 역할을 하기 위해 만들어졌다. 
- reducer는 data를 modify하는 함수이다.
- action은 redux에서 function을 부를때 쓰는 두번째 parameter 혹은 argument이다.
- data의 store를 만들고 data의 modifier에게 message를 store에 보내면 된다.
- message를 send하는 방법은 dispatch를 사용하면 된다. 
- 전송한 message는 action에 넣으면 되고, 해야할 일은 action을 체크해보면 된다.
- subscribe는 우리에게 store안에 있는 변화들을 알수 있게 해준다.
- 유일하게 state를 바꿀수 있는 방법은 action을 보내는것이다. 그리고 다른것은 절대 state를 mutate 하지 말아야한다. 
- mutating state하는 대신에 new state objects를 리턴 해야한다. 
- 상태를 수정하는 것이 아니라 새로운 것을 return하는 것이다.

### React Redux 
- mapStateToProps는 function인데 두 종료의 argument와 함께 호출된다. 
- mapStateToProps는 Redux State로부터 home component에 prop으로써 전달한다는것이다.

### Reduct Toolkit
- Reduct Toolkit은 많은 지름길들이 있는 Package라고 보면 된다.
- 적은량의 코드로 같은 기능을 하도록 도와준다.
- npm install @reduxjs/toolkit
- createReducer를 사용하면 state를 mutate할수 있다.
- createReducer에서는 2가지 옵션이 있는데 하나는 새로운 state를 리턴할수있고 아니면 state를 mutate할수 있다. 무언가 리턴을 할때는 꼭 새로운 state이여야만 한다.
- push는 아무것도 리턴하지 않고 state를 mutate해준다. 
- filter는 state를 mutate 하지 않고 새로운 array를 리턴한다.
- configureStore를 이용해서 Redux Developer Tools를 사용할수 있다.